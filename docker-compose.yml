version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pfe-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - my_network

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: pfe-backend
    ports:
      - "5001:5001"
    depends_on:
      - db
    networks:
      - my_network

  db:
    image: "mongo"
    container_name: db-docker
    ports:
      - "27017:27017"
    volumes:
      - data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  # jenkins:
  #   build:
  #     context: ./jenkins
  #     dockerfile: Dockerfile
  #   container_name: jenkins
  #   restart: always
  #   user: root
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - jenkins-data:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose
  #   networks:
  #     - mynetwork

  # sonarqube:
  #   image: "sonarqube:9.3-community"
  #   container_name: sonarqube
  #   environment:
  #     - SONARQUBE_JDBC_USERNAME=sonarqube
  #     - SONARQUBE_JDBC_PASSWORD=sonarqube
  #   ports:
  #     - "9000:9000"
  #   networks:
  #     - mynetwork
  #   volumes:
  #     - ./sonarqube_data:/var/lib/sonarqube/data
      
#  traefik:
#    image: "traefik:v2.5"
#    container_name: traefik
#    command:
#      - "--providers.docker=true"
#      - "--providers.docker.exposedbydefault=false"
#      - "--entrypoints.web.address=:80"
#    ports:
#      - "80:80"
#      - "9090:9090"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./traefik/traefik.toml:/traefik.toml
#    networks:
#      - mynetwork

volumes:
  data:
  # jenkins-data:

networks:
  my_network:
    name: "my_network"
    internal: true
