version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pfe-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - my_network

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: pfe-backend
    ports:
      - "5001:5001"
    depends_on:
      - db
    networks:
      - my_network

  db:
    image: "mongo"
    container_name: db-docker
    ports:
      - "27017:27017"
    volumes:
      - data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=YthetiptopO123.
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  nginx:
    image: "nginx:latest"
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    networks:
      - my_network


  sonarqube:
    image: "sonarqube:9.3-community"
    container_name: sonarqube
    environment:
      - SONARQUBE_JDBC_USERNAME=sonarqube
      - SONARQUBE_JDBC_PASSWORD=sonarqube
    ports:
      - "9000:9000"
    networks:
      - my_network
    volumes:
      - ./sonarqube_data:/opt/sonarqube/data

volumes:
  data:
  sonarqube_data:

networks:
  my_network:
    name: "my_network"
